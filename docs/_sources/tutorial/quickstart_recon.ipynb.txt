{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Reconstruction using GraphEM"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Expected time to run through: 10 mins**\n",
    "\n",
    "This tutorial demonstrates how to get a reconstruction using GraphEM, leveraging HadCRUT4 and PAGES2k."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%load_ext autoreload\n",
    "%autoreload 2\n",
    "\n",
    "import LMRt\n",
    "import GraphEM\n",
    "import os\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import xarray as xr\n",
    "import matplotlib.pyplot as  plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "job = GraphEM.ReconJob()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m\u001b[36mGraphEM: job.load_configs() >>> loading reconstruction configurations from: ./testcases/PAGES2k_HadCRUT/configs.yml\u001b[0m\n",
      "\u001b[1m\u001b[32mGraphEM: job.load_configs() >>> job.configs created\u001b[0m\n",
      "\u001b[1m\u001b[36mGraphEM: job.load_configs() >>> job.configs[\"job_dirpath\"] = /Users/fzhu/Github/GraphEM/docsrc/tutorial/testcases/PAGES2k_HadCRUT/recon\u001b[0m\n",
      "\u001b[1m\u001b[32mGraphEM: job.load_configs() >>> /Users/fzhu/Github/GraphEM/docsrc/tutorial/testcases/PAGES2k_HadCRUT/recon created\u001b[0m\n",
      "{'anom_period': [1951, 1980],\n",
      " 'job_dirpath': '/Users/fzhu/Github/GraphEM/docsrc/tutorial/testcases/PAGES2k_HadCRUT/recon',\n",
      " 'job_id': 'LMRt_quickstart',\n",
      " 'obs_path': {'tas': './data/obs/HadCRUT.5.0.1.0.analysis.anomalies.ensemble_mean.nc'},\n",
      " 'obs_varname': {'tas': 'tas_mean'},\n",
      " 'proxydb_path': './data/proxy/pages2k_dataset.pkl',\n",
      " 'ptype_list': ['coral.d18O',\n",
      "                'coral.SrCa',\n",
      "                'coral.calc',\n",
      "                'tree.TRW',\n",
      "                'tree.MXD'],\n",
      " 'recon_period': [0, 2000]}\n"
     ]
    }
   ],
   "source": [
    "job.load_configs('./testcases/PAGES2k_HadCRUT/configs.yml', verbose=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m\u001b[36mGraphEM: job.load_proxydb() >>> job.configs[\"proxydb_path\"] = /Users/fzhu/Github/GraphEM/docsrc/tutorial/testcases/PAGES2k_HadCRUT/data/proxy/pages2k_dataset.pkl\u001b[0m\n",
      "\u001b[1m\u001b[32mGraphEM: job.load_proxydb() >>> 692 records loaded\u001b[0m\n",
      "\u001b[1m\u001b[32mGraphEM: job.load_proxydb() >>> job.proxydb created\u001b[0m\n"
     ]
    }
   ],
   "source": [
    "job.load_proxydb(verbose=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m\u001b[36mGraphEM: job.filter_proxydb() >>> filtering proxy records according to: ['coral.d18O', 'coral.SrCa', 'coral.calc', 'tree.TRW', 'tree.MXD']\u001b[0m\n",
      "\u001b[1m\u001b[32mGraphEM: job.filter_proxydb() >>> 510 records remaining\u001b[0m\n"
     ]
    }
   ],
   "source": [
    "job.filter_proxydb(verbose=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m\u001b[36mGraphEM: job.seasonalize_proxydb() >>> job.configs[\"ptype_season\"] = {'coral.d18O': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], 'coral.SrCa': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], 'coral.calc': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], 'tree.TRW': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], 'tree.MXD': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]}\u001b[0m\n",
      "\u001b[1m\u001b[36mGraphEM: job.seasonalize_proxydb() >>> seasonalizing proxy records according to: {'coral.d18O': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], 'coral.SrCa': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], 'coral.calc': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], 'tree.TRW': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], 'tree.MXD': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]}\u001b[0m\n",
      "\u001b[1m\u001b[32mGraphEM: job.seasonalize_proxydb() >>> 510 records remaining\u001b[0m\n",
      "\u001b[1m\u001b[32mGraphEM: job.seasonalize_proxydb() >>> job.proxydb updated\u001b[0m\n"
     ]
    }
   ],
   "source": [
    "# ptype_season = {}\n",
    "# for k, v in job.proxydb.type_dict.items():\n",
    "#     ptype_season[k] = list(range(1, 13)) # annual\n",
    "    \n",
    "# job.seasonalize_proxydb(ptype_season, verbose=True)\n",
    "job.seasonalize_proxydb(verbose=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m\u001b[36mGraphEM: job.load_obs() >>> loading instrumental observation fields from: {'tas': '/Users/fzhu/Github/GraphEM/docsrc/tutorial/testcases/PAGES2k_HadCRUT/data/obs/HadCRUT.5.0.1.0.analysis.anomalies.ensemble_mean.nc'}\u001b[0m\n",
      "\u001b[1m\u001b[32mGraphEM: job.load_obs() >>> job.obs created\u001b[0m\n"
     ]
    }
   ],
   "source": [
    "job.load_obs(varname_dict={'lat': 'latitude', 'lon': 'longitude', 'tas': 'tas_mean'}, verbose=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m\u001b[36mGraphEM: job.seasonalize_obs() >>> job.configs[\"obs_season\"] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\u001b[0m\n",
      "\u001b[1m\u001b[30mGraphEM: job.seasonalize_obs() >>> seasonalized obs w/ season [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\u001b[0m\n",
      "Dataset Overview\n",
      "-----------------------\n",
      "\n",
      "     Name:  tas\n",
      "   Source:  /Users/fzhu/Github/GraphEM/docsrc/tutorial/testcases/PAGES2k_HadCRUT/data/obs/HadCRUT.5.0.1.0.analysis.anomalies.ensemble_mean.nc\n",
      "    Shape:  time:171, lat:36, lon:72\n",
      "\u001b[1m\u001b[32mGraphEM: job.seasonalize_obs() >>> job.obs updated\u001b[0m\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/fzhu/Github/LMRt/LMRt/utils.py:258: RuntimeWarning: Mean of empty slice\n",
      "  tmp = np.nanmean(var[inds, ...], axis=0)\n"
     ]
    }
   ],
   "source": [
    "job.seasonalize_obs(verbose=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1850 1851 1852 1853 1854 1855 1856 1857 1858 1859 1860 1861 1862 1863\n",
      " 1864 1865 1866 1867 1868 1869 1870 1871 1872 1873 1874 1875 1876 1877\n",
      " 1878 1879 1880 1881 1882 1883 1884 1885 1886 1887 1888 1889 1890 1891\n",
      " 1892 1893 1894 1895 1896 1897 1898 1899 1900 1901 1902 1903 1904 1905\n",
      " 1906 1907 1908 1909 1910 1911 1912 1913 1914 1915 1916 1917 1918 1919\n",
      " 1920 1921 1922 1923 1924 1925 1926 1927 1928 1929 1930 1931 1932 1933\n",
      " 1934 1935 1936 1937 1938 1939 1940 1941 1942 1943 1944 1945 1946 1947\n",
      " 1948 1949 1950 1951 1952 1953 1954 1955 1956 1957 1958 1959 1960 1961\n",
      " 1962 1963 1964 1965 1966 1967 1968 1969 1970 1971 1972 1973 1974 1975\n",
      " 1976 1977 1978 1979 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989\n",
      " 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 2000 2001 2002 2003\n",
      " 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017\n",
      " 2018 2019 2020]\n"
     ]
    }
   ],
   "source": [
    "tas = job.obs.fields['tas']\n",
    "print(tas.time)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "recon_time = np.arange(1500, 2001)\n",
    "nt = np.size(recon_time)\n",
    "idx = np.arange(nt)\n",
    "calib_size = 70\n",
    "calib = idx[-calib_size:]\n",
    "nt_tas, nlat, nlon = np.shape(tas.value)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "171 2592\n",
      "(501, 2592)\n",
      "[1931 1932 1933 1934 1935 1936 1937 1938 1939 1940 1941 1942 1943 1944\n",
      " 1945 1946 1947 1948 1949 1950 1951 1952 1953 1954 1955 1956 1957 1958\n",
      " 1959 1960 1961 1962 1963 1964 1965 1966 1967 1968 1969 1970 1971 1972\n",
      " 1973 1974 1975 1976 1977 1978 1979 1980 1981 1982 1983 1984 1985 1986\n",
      " 1987 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 2000]\n"
     ]
    }
   ],
   "source": [
    "tas_value = tas.value.reshape(np.shape(tas.value)[0], -1)\n",
    "nt_tas, npos_tas =  np.shape(tas_value)\n",
    "print(nt_tas, npos_tas)\n",
    "\n",
    "temp = np.ndarray((nt, npos_tas))\n",
    "temp[:,:] = np.nan\n",
    "temp[-calib_size:] = tas_value[(tas.time>recon_time[-1]-calib_size)&(tas.time<=recon_time[-1])]\n",
    "print(np.shape(temp))\n",
    "print(tas.time[(tas.time>recon_time[-1]-calib_size)&(tas.time<=recon_time[-1])])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>NAm_153</th>\n",
       "      <th>NAm_165</th>\n",
       "      <th>Asi_178</th>\n",
       "      <th>Asi_174</th>\n",
       "      <th>Asi_198</th>\n",
       "      <th>NAm_145</th>\n",
       "      <th>Arc_071</th>\n",
       "      <th>NAm_102</th>\n",
       "      <th>NAm_046</th>\n",
       "      <th>Ocn_065</th>\n",
       "      <th>...</th>\n",
       "      <th>NAm_143</th>\n",
       "      <th>Asi_208</th>\n",
       "      <th>Asi_119</th>\n",
       "      <th>Ocn_153</th>\n",
       "      <th>Asi_026</th>\n",
       "      <th>Ocn_169</th>\n",
       "      <th>Asi_201</th>\n",
       "      <th>Asi_179</th>\n",
       "      <th>Ocn_071</th>\n",
       "      <th>Ocn_072</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1500.0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.994</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.06</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.026</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.805</td>\n",
       "      <td>0.849</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.710</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1501.0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.131</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.70</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.058</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.694</td>\n",
       "      <td>0.882</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.759</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1502.0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.898</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.31</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.088</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.742</td>\n",
       "      <td>0.620</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.944</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1503.0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.032</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.70</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.875</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.677</td>\n",
       "      <td>0.413</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.845</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1504.0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.832</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.43</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.139</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.730</td>\n",
       "      <td>0.551</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.702</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1996.0</th>\n",
       "      <td>1.346</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.028</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.647</td>\n",
       "      <td>1.146</td>\n",
       "      <td>1.36</td>\n",
       "      <td>1.033</td>\n",
       "      <td>1.373</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.490</td>\n",
       "      <td>0.813</td>\n",
       "      <td>9.099227</td>\n",
       "      <td>0.922</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.070</td>\n",
       "      <td>1.044</td>\n",
       "      <td>-4.114561</td>\n",
       "      <td>8.819362</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1997.0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.751</td>\n",
       "      <td>1.263</td>\n",
       "      <td>2.30</td>\n",
       "      <td>1.037</td>\n",
       "      <td>1.153</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.278</td>\n",
       "      <td>0.864</td>\n",
       "      <td>9.192620</td>\n",
       "      <td>1.112</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.007</td>\n",
       "      <td>1.166</td>\n",
       "      <td>-4.231963</td>\n",
       "      <td>8.767808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1998.0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.499</td>\n",
       "      <td>1.054</td>\n",
       "      <td>0.67</td>\n",
       "      <td>1.171</td>\n",
       "      <td>1.369</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.332</td>\n",
       "      <td>0.743</td>\n",
       "      <td>9.124461</td>\n",
       "      <td>1.260</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.111</td>\n",
       "      <td>1.161</td>\n",
       "      <td>-4.427678</td>\n",
       "      <td>8.751082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1999.0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.054</td>\n",
       "      <td>1.067</td>\n",
       "      <td>1.47</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.502</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.161</td>\n",
       "      <td>1.269</td>\n",
       "      <td>9.073438</td>\n",
       "      <td>0.980</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.402</td>\n",
       "      <td>0.851</td>\n",
       "      <td>-4.081667</td>\n",
       "      <td>8.825333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2000.0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.842</td>\n",
       "      <td>0.994</td>\n",
       "      <td>1.97</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.674</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.837</td>\n",
       "      <td>1.644</td>\n",
       "      <td>9.078696</td>\n",
       "      <td>1.152</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.930</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>501 rows × 510 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        NAm_153  NAm_165  Asi_178  Asi_174  Asi_198  NAm_145  Arc_071  \\\n",
       "1500.0      NaN      NaN    0.994      NaN      NaN      NaN     1.06   \n",
       "1501.0      NaN      NaN    1.131      NaN      NaN      NaN     0.70   \n",
       "1502.0      NaN      NaN    0.898      NaN      NaN      NaN     1.31   \n",
       "1503.0      NaN      NaN    1.032      NaN      NaN      NaN     0.70   \n",
       "1504.0      NaN      NaN    0.832      NaN      NaN      NaN    -0.43   \n",
       "...         ...      ...      ...      ...      ...      ...      ...   \n",
       "1996.0    1.346      NaN    1.028      NaN    1.647    1.146     1.36   \n",
       "1997.0      NaN      NaN      NaN      NaN    1.751    1.263     2.30   \n",
       "1998.0      NaN      NaN      NaN      NaN    1.499    1.054     0.67   \n",
       "1999.0      NaN      NaN      NaN      NaN    1.054    1.067     1.47   \n",
       "2000.0      NaN      NaN      NaN      NaN    0.842    0.994     1.97   \n",
       "\n",
       "        NAm_102  NAm_046  Ocn_065  ...  NAm_143  Asi_208  Asi_119   Ocn_153  \\\n",
       "1500.0      NaN    1.026      NaN  ...      NaN    0.805    0.849       NaN   \n",
       "1501.0      NaN    1.058      NaN  ...      NaN    0.694    0.882       NaN   \n",
       "1502.0      NaN    1.088      NaN  ...      NaN    0.742    0.620       NaN   \n",
       "1503.0      NaN    0.875      NaN  ...      NaN    0.677    0.413       NaN   \n",
       "1504.0      NaN    1.139      NaN  ...      NaN    0.730    0.551       NaN   \n",
       "...         ...      ...      ...  ...      ...      ...      ...       ...   \n",
       "1996.0    1.033    1.373      NaN  ...      NaN    1.490    0.813  9.099227   \n",
       "1997.0    1.037    1.153      NaN  ...      NaN    1.278    0.864  9.192620   \n",
       "1998.0    1.171    1.369      NaN  ...      NaN    1.332    0.743  9.124461   \n",
       "1999.0      NaN    1.502      NaN  ...      NaN    1.161    1.269  9.073438   \n",
       "2000.0      NaN    1.674      NaN  ...      NaN    0.837    1.644  9.078696   \n",
       "\n",
       "        Asi_026  Ocn_169  Asi_201  Asi_179   Ocn_071   Ocn_072  \n",
       "1500.0    0.710      NaN      NaN      NaN       NaN       NaN  \n",
       "1501.0    0.759      NaN      NaN      NaN       NaN       NaN  \n",
       "1502.0    0.944      NaN      NaN      NaN       NaN       NaN  \n",
       "1503.0    0.845      NaN      NaN      NaN       NaN       NaN  \n",
       "1504.0    0.702      NaN      NaN      NaN       NaN       NaN  \n",
       "...         ...      ...      ...      ...       ...       ...  \n",
       "1996.0    0.922      NaN    1.070    1.044 -4.114561  8.819362  \n",
       "1997.0    1.112      NaN    1.007    1.166 -4.231963  8.767808  \n",
       "1998.0    1.260      NaN    1.111    1.161 -4.427678  8.751082  \n",
       "1999.0    0.980      NaN    1.402    0.851 -4.081667  8.825333  \n",
       "2000.0    1.152      NaN    0.930      NaN       NaN       NaN  \n",
       "\n",
       "[501 rows x 510 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "npos_proxy = job.proxydb.nrec\n",
    "lonlat = np.ndarray((npos_tas+npos_proxy, 2))\n",
    "\n",
    "k = 0\n",
    "for i in range(tas.nlon):\n",
    "    for j in range(tas.nlat):\n",
    "        lonlat[k] = [tas.lon[i], tas.lat[j]]\n",
    "        k += 1\n",
    "\n",
    "df_proxy = pd.DataFrame(index=recon_time)\n",
    "for pid, pobj in job.proxydb.records.items():\n",
    "    series = pd.Series(index=pobj.time, data=pobj.value, name=pid)\n",
    "    df_proxy = pd.concat([df_proxy, series], axis=1)\n",
    "    lonlat[k] = [pobj.lon, pobj.lat]\n",
    "    k += 1\n",
    "    \n",
    "df_proxy = df_proxy[(df_proxy.index>=recon_time[0]) & (df_proxy.index<=recon_time[-1])]\n",
    "df_proxy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(501, 510)\n",
      "(3102, 2)\n",
      "3102\n"
     ]
    }
   ],
   "source": [
    "proxy = df_proxy.values\n",
    "print(np.shape(proxy))\n",
    "print(np.shape(lonlat))\n",
    "print(npos_tas+npos_proxy)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Estimating graph using neighborhood method\n",
      "Running GraphEM:\n",
      "\n",
      "Iter     dXmis     rdXmis\n",
      "\n",
      "001     0.3008     0.0830\n",
      "002     0.2886     0.0816\n",
      "003     0.0713     0.0201\n",
      "004     0.0635     0.0181\n",
      "005     0.0659     0.0189\n",
      "006     0.0649     0.0187\n",
      "007     0.0560     0.0163\n",
      "008     0.0438     0.0128\n",
      "009     0.0341     0.0100\n",
      "010     0.0293     0.0086\n",
      "011     0.0286     0.0084\n",
      "012     0.0292     0.0086\n",
      "013     0.0304     0.0089\n",
      "014     0.0316     0.0093\n",
      "015     0.0333     0.0098\n",
      "016     0.0350     0.0103\n",
      "017     0.0372     0.0109\n",
      "018     0.0392     0.0115\n",
      "019     0.0405     0.0119\n",
      "020     0.0414     0.0122\n",
      "021     0.0420     0.0124\n",
      "022     0.0410     0.0121\n",
      "023     0.0400     0.0118\n",
      "024     0.0381     0.0112\n",
      "025     0.0366     0.0108\n",
      "026     0.0358     0.0105\n",
      "027     0.0359     0.0105\n",
      "028     0.0357     0.0105\n",
      "029     0.0350     0.0103\n",
      "030     0.0351     0.0103\n",
      "031     0.0347     0.0102\n",
      "032     0.0339     0.0099\n",
      "033     0.0322     0.0094\n",
      "034     0.0323     0.0094\n",
      "035     0.0316     0.0092\n",
      "036     0.0327     0.0094\n",
      "037     0.0324     0.0093\n",
      "038     0.0323     0.0092\n",
      "039     0.0328     0.0093\n",
      "040     0.0315     0.0089\n",
      "041     0.0303     0.0085\n",
      "042     0.0305     0.0085\n",
      "043     0.0285     0.0079\n",
      "044     0.0270     0.0075\n",
      "045     0.0257     0.0071\n",
      "046     0.0245     0.0067\n",
      "047     0.0255     0.0070\n",
      "048     0.0234     0.0063\n",
      "049     0.0221     0.0060\n",
      "050     0.0210     0.0057\n",
      "051     0.0200     0.0054\n",
      "052     0.0191     0.0051\n",
      "053     0.0183     0.0049\n",
      "CPU times: user 3d 18h 11min 47s, sys: 1h 48min 47s, total: 3d 20h 34s\n",
      "Wall time: 6h 8min 33s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "\n",
    "G = GraphEM.solver.GraphEM()\n",
    "G.fit(temp, proxy, calib, lonlat=lonlat, graph_method='neighborhood')\n",
    "\n",
    "pd.to_pickle(G, './testcases/PAGES2k_HadCRUT/recon/G.pkl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(501, 2592)"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.shape(G.temp_r)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(501, 36, 72)\n"
     ]
    }
   ],
   "source": [
    "recon = G.temp_r.reshape((nt, nlat, nlon))\n",
    "print(np.shape(recon))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "nino = LMRt.utils.nino_indices(recon, tas.lat, tas.lon)\n",
    "ts_recon = LMRt.Series(time=np.arange(1500, 2001), value=nino['nino3.4'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "from scipy.io import loadmat\n",
    "\n",
    "data = loadmat('./testcases/PAGES2k_HadCRUT/data/obs/NINO34_BC09.mat')\n",
    "syr, eyr = 1873, 2000\n",
    "nyr = eyr-syr+1\n",
    "nino34 = np.zeros(nyr)\n",
    "for i in range(nyr):\n",
    "    nino34[i] = np.mean(data['nino34'][i*12:12+i*12])\n",
    "\n",
    "ts_target = LMRt.Series(time=np.arange(syr, eyr+1), value=nino34, label='BC09')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "ts_hadcrut = LMRt.Series(\n",
    "    time=tas.time,\n",
    "    value=LMRt.utils.nino_indices(tas.value, tas.lat, tas.lon)['nino3.4'],\n",
    "    label='HadCRUT',\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot and validate the NINO3.4\n",
    "fig, ax = ts_recon.plot(mute=True, label='recon.')\n",
    "ax.set_xlim(1500, 2000)\n",
    "ax.set_ylim(-2, 4)\n",
    "ts_target.plot(ax=ax)\n",
    "ts_hadcrut.plot(ax=ax)\n",
    "LMRt.showfig(fig)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
